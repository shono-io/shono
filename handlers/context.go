package handlers

import (
	"github.com/shono-io/go-shono/events"
	"github.com/shono-io/go-shono/states"
	"github.com/shono-io/go-shono/storage"
	"github.com/twmb/franz-go/pkg/kgo"
	"time"
)

type Context interface {
	Store(kind states.Kind) (storage.StateStore, error)
	Send(kind events.Kind, key string, value any) error

	// Headers are optional key/value pairs that are passed along with
	// records.
	//
	// These are purely for producers and consumers; Kafka does not look at
	// this field and only writes it to disk.
	Headers() []kgo.RecordHeader

	// NOTE: if logAppendTime, timestamp is MaxTimestamp, not first + delta
	// zendesk/ruby-kafka#706

	// Timestamp is the timestamp that will be used for this record.
	//
	// Record batches are always written with "CreateTime", meaning that
	// timestamps are generated by clients rather than brokers.
	//
	// When producing, if this field is not yet set, it is set to time.Now.
	Timestamp() time.Time

	// Topic is the topic that a record is written to.
	//
	// This must be set for producing.
	Topic() string

	// Partition is the partition that a record is written to.
	//
	// For producing, this is left unset. This will be set by the client
	// before the record is unbuffered. If you use the ManualPartitioner,
	// the value of this field is always the partition chosen when
	// producing (i.e., you partition manually ahead of time).
	Partition() int32
}
